#include "Util.h"

float FREQ::noteToFreq(const std::string& note)
{
	std::string noteCopy = note;
	noteCopy.at(0) = toupper(noteCopy.at(0));

	auto it = mToFreq.find(noteCopy);
	if (it != mToFreq.end())
		return it->second;

	assert(it != mToFreq.end());
	return 0;
}

const std::map<std::string, float> FREQ::mToFreq{
	{"C1", 32.70},
	{ "C#1", 34.65 },
	{ "D1",36.71 },
	{ "D#1",38.89 },
	{ "E1", 41.20 },
	{ "F1", 43.65 },
	{ "F#1", 46.25 },
	{ "G1", 49.00 },
	{ "G#1",51.91 },
	{ "A1", 55.00 },
	{ "A#1", 58.27 },
	{ "B1", 61.74 },
	{ "C2", 65.41 },
	{ "C#2", 69.30 },
	{ "D2",73.42 },
	{ "D#2",77.78 },
	{ "E2",82.41 },
	{ "F2",87.31 },
	{ "F#2",92.50 },
	{ "G2",98.00 },
	{ "G#2",103.8 },
	{ "A2",110.0 },
	{ "A#2",116. },
	{ "B2",123.5 },
	{ "C3",130.8 },
	{ "C#3",138.6 },
	{ "D3",146.8 },
	{ "D#3",155.6 },
	{ "E3",164.8 },
	{ "F3",174.6 },
	{ "F#3",185.0 },
	{ "G3",196.0 },
	{ "G#3",207.7 },
	{ "A3",220.0 },
	{ "A#3",233.1 },
	{ "B3",246.9 },
	{ "C4",261.6 },
	{ "C#4",277.2 },
	{ "D4",293.7 },
	{ "D#4",311.1 },
	{ "E4",329.6 },
	{ "F4",349.2 },
	{ "F#4",370.0 },
	{ "G4",392.0 },
	{ "G#4",415.3 },
	{ "A4",440.0 },
	{ "A#4",466.2 },
	{ "B4",493.9 },
	{ "C5",523.3 },
	{ "C#5",554.4 },
	{ "D5",587.3 },
	{ "D#5",622.3 },
	{ "E5",659.3 },
	{ "F5",698.5 },
	{ "F#5",740.0 },
	{ "G5",784.0 },
	{ "G#5",830.6 },
	{ "A5",880.0 },
	{ "A#5",932.3 },
	{ "B5",987.8 },
	{ "C6",1047 },
	{ "C#6",1109 },
	{ "D6",1175 },
	{ "D#6",1245 },
	{ "E6",1319 },
	{ "F6",1397 },
	{ "F#6",1480 },
	{ "G6",1568 },
	{ "G#6",1661 },
	{ "A6",1760 },
	{ "A#6",1865 },
	{ "B6",1976 },
	{ "rest",0}
};